/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <600>;
            global-quick-tap;
            quick-tap-ms = <400>;
        };
    };

    combos {
        compatible = "zmk,combos";

        left_bkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <4 3>;
            timeout-ms = <50>;
        };

        right_bkt {
            bindings = <&kp RBKT>;
            key-positions = <7 8>;
            timeout-ms = <50>;
        };

        left_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <15 16>;
            timeout-ms = <50>;
        };

        right_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <19 20>;
            timeout-ms = <50>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <27 28>;
            timeout-ms = <50>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <32 31>;
            timeout-ms = <50>;
        };

        bac {
            bindings = <&kp BACKSLASH>;
            key-positions = <5 6>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <17 18>;
        };

        Caps_Lock {
            bindings = <&caps_word>;
            key-positions = <23 12>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Qwerty {
            bindings = <
&kp TAB           &kp Q           &kp W           &kp E         &kp R             &kp T        &kp Y      &kp U         &kp I          &kp O            &kp P               &kp BSPC
&kp LEFT_SHIFT    &hm LEFT_GUI A  &hm LEFT_ALT S  &hm LCTRL D   &hm LEFT_SHIFT F  &kp G        &kp H      &hm RSHIFT J  &hm RCTRL K    &hm RIGHT_ALT L  &hm RGUI SEMICOLON  &kp SQT
&kp LEFT_CONTROL  &kp Z           &kp X           &kp C         &kp V             &kp B        &kp N      &kp M         &kp COMMA      &kp DOT          &kp FSLH            &kp ESC
                                                  &kp LEFT_GUI  &ltq 1 MINUS      &kp SPACE    &kp ENTER  &ltq 2 PIPE   &kp RIGHT_ALT
            >;
        };

        Numpad {
            bindings = <
&kp LEFT_SHIFT  &kp N1  &kp N2  &kp N3   &kp N4   &kp N5     &kp N6    &kp N7    &kp N8    &kp N9     &kp N0         &kp BSPC
&kp F1          &kp F2  &kp F3  &kp F4   &kp F5   &kp F6     &kp HOME  &kp DOT   &kp UP    &kp COMMA  &kp PAGE_UP    &kt INSERT
&kp F7          &kp F8  &kp F9  &kp F10  &kp F11  &kp F12    &kp END   &kp LEFT  &kp DOWN  &kp RIGHT  &kp PAGE_DOWN  &kp DELETE
                                &trans   &trans   &trans     &trans    &mo 3     &trans
            >;
        };

        Symbol {
            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN  &kp POUND     &kp DOLLAR        &kp PERCENT    &kp CARET       &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE
&trans     &kp DOT          &kp COLON    &kp QUESTION  &kp LESS_THAN     &kp AT         &kp UNDERSCORE  &kp MINUS      &kp SLASH     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp NON_US_BACKSLASH
&trans     &kp COMMA        &kp SEMI     &kp SLASH     &kp GREATER_THAN  &kp DOT        &trans          &kp PLUS       &kp EQUAL     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp GRAVE
                                         &trans        &mo 4             &trans         &trans          &trans         &trans
            >;
        };

        RGB {
            bindings = <
&rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &kp C_VOLUME_UP    &kp K_PREV  &kp K_PLAY_PAUSE  &kp K_STOP  &kp K_NEXT  &trans  &bl BL_TOG
&rgb_ug RGB_EFF  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &kp C_VOL_DN       &trans      &trans            &trans      &trans      &trans  &bl BL_INC
&rgb_ug RGB_EFR  &trans           &trans           &trans           &trans           &kp K_MUTE         &to 5       &trans            &trans      &trans      &trans  &bl BL_DEC
                                                   &trans           &trans           &trans             &trans      &trans            &trans
            >;
        };

        Bluetooth {
            bindings = <
&bt BT_NXT  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans        &trans      &trans       &trans  &trans  &trans  &bt BT_CLR_ALL
&bt BT_PRV  &trans        &trans        &trans        &trans        &trans        &trans      &trans       &trans  &trans  &trans  &trans
&bt BT_CLR  &trans        &trans        &trans        &bootloader   &sys_reset    &sys_reset  &bootloader  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans        &trans      &trans       &trans
            >;
        };

        RGB-Custom {
            bindings = <
&rgb_ug RGB_COLOR_HSB(0,100,50)  &rgb_ug RGB_COLOR_HSB(32,100,50)  &rgb_ug RGB_COLOR_HSB(60,90,70)   &rgb_ug RGB_COLOR_HSB(90,80,40)   &rgb_ug RGB_COLOR_HSB(120,70,50)   &rgb_ug RGB_COLOR_HSB(150,60,70)     &rgb_ug RGB_COLOR_HSB(180,90,50)   &rgb_ug RGB_COLOR_HSB(210,80,60)   &rgb_ug RGB_COLOR_HSB(240,70,40)  &rgb_ug RGB_COLOR_HSB(270,80,50)   &rgb_ug RGB_COLOR_HSB(300,70,60)  &rgb_ug RGB_COLOR_HSB(330,90,70)
&rgb_ug RGB_COLOR_HSB(0,60,30)   &rgb_ug RGB_COLOR_HSB(30,50,40)   &rgb_ug RGB_COLOR_HSB(60,70,50)   &rgb_ug RGB_COLOR_HSB(90,60,30)   &rgb_ug RGB_COLOR_HSB(120,50,40)   &rgb_ug RGB_COLOR_HSB(150,70,50)     &rgb_ug RGB_COLOR_HSB(180,60,30)   &rgb_ug RGB_COLOR_HSB(210,50,40)   &rgb_ug RGB_COLOR_HSB(240,70,50)  &rgb_ug RGB_COLOR_HSB(270,60,30)   &rgb_ug RGB_COLOR_HSB(300,50,40)  &rgb_ug RGB_COLOR_HSB(330,70,50)
&rgb_ug RGB_COLOR_HSB(0,100,50)  &rgb_ug RGB_COLOR_HSB(41,100,50)  &rgb_ug RGB_COLOR_HSB(57,100,50)  &rgb_ug RGB_COLOR_HSB(90,100,50)  &rgb_ug RGB_COLOR_HSB(120,100,29)  &rgb_ug RGB_COLOR_HSB(150,100,50)    &rgb_ug RGB_COLOR_HSB(180,100,64)  &rgb_ug RGB_COLOR_HSB(210,100,50)  &rgb_ug RGB_COLOR_HSB(240,94,32)  &rgb_ug RGB_COLOR_HSB(270,100,50)  &rgb_ug RGB_COLOR_HSB(300,78,20)  &rgb_ug RGB_COLOR_HSB(330,100,75)
                                                                                                     &trans                            &trans                             &tog 5                               &trans                             &trans                             &trans
            >;
        };

        extra3 { status = "reserved"; };

        extra4 { status = "reserved"; };
    };
};
